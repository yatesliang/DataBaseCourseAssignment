@model SceneView.Controllers.ProfileController.ProfileData

@{

    Layout = "~/Views/Profile/_Layout.cshtml";
}

<ol class="breadcrumb hidden-xs">
    <li><a href="/profile">Home</a></li>
    <li><a href="/profile/setting">Setting</a></li>
</ol>
<h4 class="page-title">个人资料</h4>


<div class="col-md-12 m-b-25">

    @using (Html.BeginForm("setting", "profile", FormMethod.Post, new { @name = "editForm", @onsubmit = "return checkNewValid()" }))
    {
        @Html.ValidationSummary(true)
        <p>昵称</p>
        @Html.TextBoxFor(m => m.userData.userInfo.nickname, new { @class = "form-control input-focused", @id = "name", @value = @Model.userData.userInfo.nickname })
        @Html.ValidationMessageFor(m => m.userData.userInfo.nickname)
        <br /><p>性别</p>
        @*@Html.RadioButtonFor(m => m.userData.userInfo.gender, "男", new { @checked = "true"})<p>男</p>
            @Html.RadioButtonFor(m => m.userData.userInfo.gender, "女")<p>女</p>*@
        @Html.DropDownListFor(m => m.userData.userInfo.gender, new SelectList(Enum.GetValues(typeof(SceneView.Controllers.ProfileController.Gender))), new { @class = "form-control" })
        <br /><p>电话号码</p>
        @Html.TextBoxFor(m => m.userData.userInfo.phoneNumber, new { @class = "form-control input-focused", @id = "telephone", @value = @Model.userData.userInfo.phoneNumber })
        @Html.ValidationMessageFor(m => m.userData.userInfo.phoneNumber)
        <br /><p>个人简介</p>
        @Html.TextAreaFor(m => m.userData.userInfo.introduction, new { @class = "form-control auto-size m-b-10", @value = @Model.userData.userInfo.introduction })
        @Html.ValidationMessageFor(m => m.userData.userInfo.introduction)
        <br /><p>安全验证问题</p>
        <input class="form-control" type="text" value="请输入您最常居住的城市" disabled />
        <br /><p>答案</p>
        @Html.TextBoxFor(m => m.userData.userInfo.SQAnswer, new { @class = "form-control input-focused", @id = "pos", @value = @Model.userData.userInfo.SQAnswer })
        @Html.ValidationMessageFor(m => m.userData.userInfo.SQAnswer)
        <br /><input type="submit" class="btn btn-alt m-r-5" />
    }
</div>

<script>
    function checkNewValid() {
        var name = document.forms["editForm"]["name"].value;
        if (name == null || name == "") {
            alert("请输入用户名");  //to do
            return false;
        } else if (name.length > 16) {
            alert("用户名不应超过 16 位");
            //to do
            return false;
        }
        var tel = document.forms["editForm"]["telephone"].value;
        var telPatrn = /^((0\d{2,3}-\d{7,8})|(1[3584]\d{9}))$/;
        if (!telPatrn.exec(tel)) {
            alert("电话无效");
            return false;
        }
        var pos = document.forms["editForm"]["pos"].value;
        if (pos == null || pos == "") {
            alert("请输入问题验证答案");
            return false;
        }
        return true;
    }
</script>

<script>
    function handleFiles(obj, id) {
        file = document.getElementById("icon");
        var files = obj.files;
        img = new Image();
        if (window.URL) {
            //File API
            img.src = window.URL.createObjectURL(files[0]); //创建一个object URL，并不是你的本地路径
            img.onload = function (e) {
                window.URL.revokeObjectURL(this.src); //图片加载后，释放object URL
            }
        }
        file.src = img.src;
            //上传文件
            // var fd = new FormData(),//实例化一个表单
            // xhr = new XMLHttpRequest();
            // fd.append('headimg', files[0]);//追加图片元素
            // xhr.open('post', 'user.php?act=act_edit_img');//请求方式，请求地址
            // xhr.send(fd);
    }
</script>